# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-19 20:50
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ScrapeData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_link', models.TextField(verbose_name='Image Url')),
                ('image_width', models.DecimalField(decimal_places=2, default=0.0, max_digits=1000, verbose_name='Image Width')),
                ('image_height', models.DecimalField(decimal_places=2, default=0.0, max_digits=1000, verbose_name='Image Height')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'ScrapeData',
                'verbose_name_plural': 'ScrapeData',
            },
        ),
        migrations.CreateModel(
            name='ScrapeUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scrapeUrl_link', models.TextField(unique=True, verbose_name='Website Url')),
                ('scrape_time', models.IntegerField(default='', verbose_name='Time Taken to scrape')),
                ('head_data', models.TextField(blank=True, default='', null=True, verbose_name='Head Tag Data')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'ScrapeUrl',
                'verbose_name_plural': "ScrapeUrl's",
            },
        ),
        migrations.AddField(
            model_name='scrapedata',
            name='scrapeUrl_link',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='scrape.ScrapeUrl'),
        ),
    ]
